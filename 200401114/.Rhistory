download.file("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv", "MapsThatChangedOurWorld_StoryMap_Data.csv")
mydata <- read.csv(url("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv"), header=TRUE , sep=";")
if (!require(testthat)) install.packages('testthat')
library(testthat)
test_that("MapsThatChangedOurWorld_StoryMap_Data.csv adlı dosya aktif dizinde mevcuttur", {
expect_identical(file.exists("MapsThatChangedOurWorld_StoryMap_Data.csv"), T)
})
test_that("MapsThatChangedOurWorld_StoryMap_Data.csv adlı dosya aktif dizinde mevcuttur", {
expect_identical(file.exists("MapsThatChangedOurWorld_StoryMap_Data.csv"), T)
})
test_that("MapsThatChangedOurWorld_StoryMap_Data.csv adlı dosya aktif dizinde mevcuttur", {
expect_identical(file.exists("MapsThtChangedOurWorld_StoryMap_Data.csv"), T)
})
test_that("MapsThatChangedOurWorld_StoryMap_Data.csv adlı dosya aktif dizinde mevcuttur", {
expect_identical(file.exists("MapsThatChangedOurWorld_StoryMap_Data.csv"), T)
})
download.file("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv", "MapsThatChangedOurWorld_StoryMap_Data.csv")
maps <- read.csv(url("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv"), header=TRUE , sep=";")
file.exists("MapsThatChangedOurWorld_StoryMap_Data.csv")
test_that("maps nesnesi bir data.frame’dir.", {
expect_identical(typeof(maps) == "data.frame", T)
})
test_that("maps nesnesi bir data.frame’dir.", {
expect_identical(typesof(maps) == "data.frame", T)
})
typeof(maps) == "data.frame"
typeof(maps)
maps <- data.frame(read.csv(url("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv"), header=TRUE , sep=";"))
typeof(maps)
maps <- as.data.frame(read.csv(url("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv"), header=TRUE , sep=";"))
typeof(maps)
class(maps)
maps <- read.csv(url("https://raw.githubusercontent.com/scizmeli/Red/master/MapsThatChangedOurWorld_StoryMap_Data.csv"), header=TRUE , sep=";")
class(maps)
test_that("maps nesnesi bir data.frame’dir.", {
expect_identical(class(maps) == "data.frame", T)
})
mydata$Latitude<-gsub("N","",as.character(mydata$Latitude))
maps$Latitude<-gsub("N","",as.character(maps$Latitude))
test_that("maps adlı değiken Global Workspace’de mevcuttur.", {
expect_identical(exists("maps"), T)
})
test_that("maps adlı data.frame’in ilk sütunun adı “City” olmalıdır.", {
expect_identical(colnames(maps)[1] == "City", T)
})
idx <- which(grepl("W", mydata$Longitude)==TRUE)
idx <- which(grepl("W", mydata$Longitude)==TRUE)
idx <- which(grepl("W", maps$Longitude)==TRUE)
maps$Longitude<-gsub("E","",as.character(maps$Longitude))
test_that("maps adlı data.frame’in 5. sütunun adında “Title” kelimesi ", {
expect_identical(colnames(maps)[5] == "Title", T)
})
maps
colnames(maps)[5]
test_that("maps adlı data.frame’in 5. sütunun adında “Title” kelimesi ", {
expect_identical(colnames(maps)[5] == "Title.of.Map.Being.Discussed", T)
})
mydata$Longitude<-gsub("W","",as.character(mydata$Longitude))
maps$Longitude<-gsub("W","",as.character(maps$Longitude))
mydata$Year<-gsub("AD", "", as.character(mydata$Year))
maps$Year<-gsub("AD", "", as.character(maps$Year))
maps$Longitude <- as.numeric(maps$Longitude)
maps$Latitude <- as.numeric(maps$Latitude)
test_that("Latitude adlı sütün numeric değerlerden oluşmalıdır.", {
expect_identical(is.numeric(maps$Latitude), T)
})
test_that("Longitude adlı sütün numeric değerlerden oluşmalıdır.", {
expect_identical(is.numeric(maps$Longitude), T)
})
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(exists("idx"), T)
})
class(idx)
test_that("idx nesnesinin tipi (class’ı) integer’dir.", {
expect_identical(class(idx) == "integer", T)
})
hist(as.numeric(mydata$Year))
hist(as.numeric(maps$Year))
maps$Longitude[idx] <- maps$Longitude[idx] * -1
maps$Year <- as.numeric(maps$Year)
finalResult <- data.frame(Longitutde = maps$Longitude, Latitude = maps$Latitude, Year= maps$Year)
maps$Longitude
maps$Longitude[idx]
maps$Longitude[idx] < 0
test_that("Year adlı adlı sütün numeric değerlerden oluşmalıdır.", {
expect_identical(maps$Longitude[idx] < 0,T)
})
test_that("Year adlı adlı sütün numeric değerlerden oluşmalıdır.", {
expect_identical(maps$Longitude[idx] < 0, TRUE)
})
all(maps$Longitude[idx] < 0, na.rm = TRUE)
test_that("Year adlı adlı sütün numeric değerlerden oluşmalıdır.", {
expect_identical(all(maps$Longitude[idx] < 0, na.rm = TRUE), TRUE)
})
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(exists("finalResult"), T)
})
ncol(finalResult)
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(ncol(finalResult) == 3, T)
})
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(ncol(finalResult) == 3, T)
})
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(ncol(finalResult) == 3, class(finalResult) == "data.frame", T)
})
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(ncol(finalResult) == 3, class(finalResult) == "dataframe", T)
})
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(exists("finalResult"), ncol(finalResult) == 3, class(finalResult) == "data.frame", T)
})
names(finalResult)
c("Longitude", "Latitude", "Year") == names(finalResult)
finalResult <- data.frame(Longitude = maps$Longitude, Latitude = maps$Latitude, Year= maps$Year)
c("Longitude", "Latitude", "Year") == names(finalResult)
all(c("Longitude", "Latitude", "Year") == names(finalResult), rm.na=TRUE)
test_that("idx nesnesi Global Workspace’de mevcuttur.", {
expect_identical(exists("finalResult"), ncol(finalResult) == 3, class(finalResult) == "data.frame", all(c("Longitude", "Latitude", "Year") == names(finalResult), rm.na=TRUE), T)
})
